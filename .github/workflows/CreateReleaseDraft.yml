name: Create Unity Package Release Draft

on:
  workflow_call:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: false
        type: string
        default: ''
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: false
        type: string
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # package.jsonから情報を取得
      - name: Get package info
        id: package_info
        run: |
          if [ ! -f "package.json" ]; then
            echo "Error: package.json not found"
            exit 1
          fi
          
          DISPLAY_NAME=$(jq -r '.displayName // .name' package.json)
          VERSION=$(jq -r '.version' package.json)
          
          if [ "$DISPLAY_NAME" = "null" ] || [ -z "$DISPLAY_NAME" ]; then
            echo "Error: displayName or name not found in package.json"
            exit 1
          fi
          
          if [ "$VERSION" = "null" ] || [ -z "$VERSION" ]; then
            echo "Error: version not found in package.json"
            exit 1
          fi
          
          echo "display_name=$DISPLAY_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "package_name=${DISPLAY_NAME}_v${VERSION}" >> $GITHUB_OUTPUT
      
      # .gitと.githubフォルダを削除
      - name: Remove .git and .github folders
        run: |
          rm -rf .git
          rm -rf .github
      
      # metaファイルのリストを作成
      - name: Create meta file list
        run: |
          # Assetsフォルダが存在する場合
          if [ -d "Assets" ]; then
            find Assets/ -name "*.meta" > metaList
          else
            # Assetsフォルダがない場合は全てのmetaファイルを検索
            find . -name "*.meta" > metaList
          fi
          
          # metaListの内容を確認
          echo "Meta files found:"
          cat metaList
      
      # UnityPackageを作成するディレクトリを準備
      - name: Create output directory
        run: mkdir -p output
      
      # UnityPackageを作成
      - name: Create Unity Package
        uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'output/${{ steps.package_info.outputs.package_name }}.unitypackage'
          include-files: metaList
      
      # Zipファイルを作成
      - name: Create Zip file
        run: |
          zip -r "output/${{ steps.package_info.outputs.package_name }}.zip" . -x "package.json" "metaList" "output/*"
      
      # package.jsonを出力ディレクトリにコピー
      - name: Copy package.json
        run: |
          cp package.json output/
      
      # タグ名を決定
      - name: Determine tag name
        id: tag
        run: |
          if [ -n "${{ inputs.tag_name }}" ]; then
            TAG_NAME="${{ inputs.tag_name }}"
          else
            TAG_NAME="v${{ steps.package_info.outputs.version }}"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
      
      # リリースドラフトを作成
      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: ${{ steps.package_info.outputs.display_name }} v${{ steps.package_info.outputs.version }}
          draft: true
          generate_release_notes: true
          files: |
            output/${{ steps.package_info.outputs.package_name }}.unitypackage
            output/${{ steps.package_info.outputs.package_name }}.zip
            output/package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # 作成されたファイルを確認
      - name: List created files
        run: |
          echo "Created files:"
          ls -la output/